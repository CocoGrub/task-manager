{"version":3,"sources":["components/Task/index.jsx","components/Pagination/index.jsx","api/index.js","utils/index.js","store/actions.js","components/TasksList/index.jsx","components/NavBar/index.jsx","components/CreateTask/index.jsx","components/EditTask/index.jsx","components/LogInForm/index.jsx","components/ProtectedRoute/index.jsx","App.js","store/index.js","index.js"],"names":["Task","email","id","status","text","username","isLogin","className","edited","original","to","pathname","state","Pagination","itemsPerPage","itemsTotal","setPage","currentPage","dispatch","useDispatch","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","pagesCount","Math","ceil","pageNumbers","i","push","portionCount","style","marginTop","alignSelf","onClick","type","payload","filter","p","map","cursor","developer","create_instance","header_required","instance","axios","create","baseURL","defaults","headers","common","LOG_IN","data","formData","FormData","Object","keys","length","append","post","then","res","catch","err","GET_TASKS","sort_field","sort_direction","page","get","CREATE_TASK","EDIT_TASK","token","set","createCookie","name","value","seconds","expires","date","Date","setTime","getTime","toGMTString","document","cookie","getTasks","a","htmlDecode","input","DOMParser","parseFromString","documentElement","textContent","responseData","tasks","message","search","JSON","parse","console","log","reLogin","cookieToken","nameEQ","ca","split","c","charAt","substring","indexOf","readCookie","localStorage","setItem","getItem","LogOUT","removeItem","taskCreatedBanner","role","width","display","justifyContent","CardList","props","useSelector","items","taskCreated","task_created","total_task_count","filterOptions","useEffect","history","location","flexDirection","item","NavBar","onChange","e","target","Navbar","collapseOnSelect","expand","bg","variant","Brand","Toggle","aria-controls","Collapse","Nav","activeClassName","aria-current","NavDropdown","title","Item","Divider","AddTask","form","setForm","onSubmit","preventDefault","stringify","setTimeout","htmlFor","required","aria-describedby","placeholder","EditTask","setFormData","editTask","checked","LogInForm","createTaskError","loginError","password","params","undefined","margin","ProtectedRoute","Component","component","rest","render","withRouter","useLocation","path","exact","initialState","currentURL","store","createStore","composeWithDevTools","applyMiddleware","thunk","ReactDOM","basename","process","getElementById"],"mappings":"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","file":"static/js/main.bdcfe410.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst Task = ({ email, id, status, text, username, isLogin }) => {\r\n  return (\r\n    <div className=\"col-sm-4 \">\r\n      <div className=\"card\">\r\n        <div className=\"card-body\">\r\n          <div className=\"card-title\">\r\n            <h4>{username}</h4>\r\n            <h6>{email}</h6>\r\n          </div>\r\n          <p className=\"card-text\">{text.edited?text.edited:text.original}</p>\r\n          <div className=\"float-right\">\r\n          {status>0&&<span className=\"badge badge-success\">Выполнено</span>}\r\n          <br/>\r\n          {text.edited&& <span className=\"badge badge-secondary\">Изменен</span>}\r\n          </div>\r\n          {isLogin && (\r\n            <Link\r\n              className=\"btn btn-primary\"\r\n              to={{\r\n                pathname: '/task/' + id,\r\n                state: { email, id, status, text, username, isLogin },\r\n              }}>\r\n              Редактировать\r\n            </Link>\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Task;\r\n","import React, { useState } from 'react';\r\nimport {useDispatch} from 'react-redux'\r\n\r\nconst Pagination = ({ itemsPerPage = 3, itemsTotal, setPage, currentPage }) => {\r\n  const dispatch=useDispatch()\r\n  const [portionNumber, setPortionNumber] = useState(1);\r\n  const leftPortionPageNumber = (portionNumber - 1) * itemsPerPage + 1;\r\n  const rightPortionPageNumber = portionNumber * itemsPerPage;\r\n  const pagesCount = Math.ceil(itemsTotal / itemsPerPage);\r\n  const pageNumbers = [];\r\n  for (let i = 1; i <= Math.ceil(itemsTotal / itemsPerPage); i++) {\r\n    pageNumbers.push(i);\r\n  }\r\n  const portionCount = Math.ceil(pagesCount / itemsPerPage);\r\n  return (\r\n    <div className=\"align-self-center\" style={{ marginTop: '2em',alignSelf:\"center\" }}>\r\n      <ul className={'pagination'}>\r\n        {portionNumber > 1 && (\r\n          <button className={'btn btn-outline-info'}\r\n            onClick={() => {\r\n              dispatch({\r\n                type:'SET_PAGE_NUMBER',\r\n                payload:leftPortionPageNumber-1\r\n              })\r\n              setPortionNumber(portionNumber - 1);\r\n            }}>\r\n            PREV\r\n          </button>\r\n        )}\r\n        {pageNumbers\r\n          .filter((p) => p >= leftPortionPageNumber && p <= rightPortionPageNumber)\r\n          .map((p) => {\r\n            return (\r\n              <li\r\n                className={currentPage === p ? 'page-item active' : ' page-item'}\r\n                style={{cursor:'pointer'}}\r\n                key={p}\r\n                onClick={() => {\r\n                  setPage(p);\r\n                }}>\r\n                <span className=\"page-link\">{p}</span>\r\n              </li>\r\n            );\r\n          })}\r\n        {portionCount > portionNumber && (\r\n          <button\r\n            className={'btn btn-outline-info'}\r\n            onClick={() => {\r\n              setPortionNumber(portionNumber + 1);\r\n              dispatch({\r\n                type:'SET_PAGE_NUMBER',\r\n                payload:rightPortionPageNumber+1\r\n              })\r\n            }}>\r\n            NEXT\r\n          </button>\r\n        )}\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Pagination;\r\n","import axios from 'axios'\r\n\r\nconst URL='https://uxcandy.com/~shapoval/test-task-backend/v2'\r\nconst developer='developer=Fedor.'\r\n\r\nconst create_instance=(header_required)=>{\r\n    const instance = axios.create({\r\n        baseURL : URL\r\n    })\r\n    if(header_required)instance.defaults.headers.common['Content-Type'] = \"multipart/form-data\";\r\n    return instance\r\n}\r\n\r\nconst LOG_IN=(data)=> {\r\n    const formData=new FormData()\r\n    for(let i =0;i<Object.keys(data).length;i++){\r\n        formData.append(`${Object.keys(data)[i]}`,`${data[Object.keys(data)[i]]}`)\r\n    }\r\n    return create_instance(1).post(`/login?${developer}`,formData)\r\n        .then((res)=>{\r\n            return res.data})\r\n        .catch((err)=>err)\r\n}\r\n\r\nconst GET_TASKS= (sort_field='id' ,sort_direction='desc',page='1')=>{\r\n    return create_instance().get(`?${developer}&sort_field=${sort_field}&sort_direction=${sort_direction}&page=${page}`)\r\n        .then((res)=> {\r\n            return {res,page}\r\n        })\r\n        .catch((err)=>err)}\r\n\r\nconst CREATE_TASK=(data)=>{\r\n    return create_instance(1).post(`/create?${developer}`,data)\r\n        .then((res)=>res)\r\n        .catch((err)=>err)\r\n}\r\n\r\nconst EDIT_TASK=({token,id,text,status})=> {\r\n    const formData=new FormData();\r\n    formData.set(\"token\",token)\r\n    formData.set(\"text\",text)\r\n    formData.set(\"status\",status)\r\n       return create_instance(1).post(`/edit/${id}?${developer}`, formData)\r\n        .then((res) => {\r\n            return res.data\r\n        })\r\n}\r\n\r\nexport {LOG_IN,GET_TASKS,CREATE_TASK,EDIT_TASK}\r\n","\r\nexport const readCookie = (name) => {\r\n    const nameEQ = name + '=';\r\n    const ca = document.cookie.split(';');\r\n    for(let i=0;i < ca.length;i++) {\r\n        let c = ca[i];\r\n        while (c.charAt(0) === ' ') c = c.substring(1,c.length);\r\n        if (c.indexOf(nameEQ) === 0) return c.substring(nameEQ.length,c.length);\r\n    }\r\n    return null;\r\n}\r\n\r\nexport const createCookie = (name, value, seconds) => {\r\n    let expires = '';\r\n    if (seconds) {\r\n        const date = new Date();\r\n        date.setTime(date.getTime()+(seconds*1000));\r\n        expires = '; expires='+date.toGMTString();\r\n    }\r\n    document.cookie = name+'='+value+expires+'; path=/';\r\n}\r\n\r\nexport const eraseCookie = (name) => {\r\n    createCookie(name,'',-1);\r\n}\r\n\r\n\r\n","import {GET_TASKS,CREATE_TASK,LOG_IN,EDIT_TASK} from '../api/'\r\nimport {createCookie, eraseCookie, readCookie} from \"../utils\";\r\n\r\nexport const getTasks= (sort_field, sort_direction, page)=>async(dispatch)=>{\r\n    const htmlDecode = (input) => {\r\n        const doc = new DOMParser().parseFromString(input, \"text/html\");\r\n        return doc.documentElement.textContent;\r\n    }\r\n    try {\r\n        const responseData = await GET_TASKS(sort_field,sort_direction,page)\r\n        const tasks=responseData.res.data.message.tasks\r\n        for(let i=0;i<tasks.length;i++){\r\n            if(tasks[i].text.search(/{(.*?)}/)!==-1){\r\n                const original=JSON.parse(htmlDecode(tasks[i].text)).original\r\n                const edited=JSON.parse(htmlDecode(tasks[i].text)).edited\r\n                responseData.res.data.message.tasks[i].text={\r\n                    original,\r\n                    edited\r\n                }\r\n            }else{\r\n                responseData.res.data.message.tasks[i].text={\r\n                    original:tasks[i].text\r\n                }\r\n            }\r\n        }\r\n        dispatch({\r\n           type : \"LOAD_TASKS\",\r\n           payload : responseData\r\n        })\r\n    } catch (error) {\r\n        console.log(error);\r\n    }   \r\n}\r\n    \r\nexport const createTask= (data)=>async(dispatch)=>{\r\n    try {\r\n        await CREATE_TASK(data)\r\n        dispatch({\r\n            type:'TASK_CREATED'\r\n        })\r\n        setTimeout(()=>{\r\n            dispatch({type:'TASK_CREATED_CLOSE'})\r\n        },3000)\r\n\r\n    } catch (error) {\r\n        console.log(error);\r\n    }   \r\n}\r\n   \r\nexport const LogIN= (params)=>async(dispatch)=>{\r\n    try {\r\n        const data = await LOG_IN(params)\r\n        if(data.status==='ok'){\r\n            dispatch({\r\n                type:\"LOG_IN\",\r\n            })\r\n            if(data.message.token!==undefined){\r\n                localStorage.setItem(\"token\",data.message.token)\r\n                createCookie('token', data.message.token, 86400);\r\n            }\r\n            }\r\n        else {\r\n            dispatch({\r\n                type:'LOG_IN_ERROR'\r\n            })\r\n            setTimeout(()=>{\r\n                dispatch({type:'LOG_IN_ERROR_CLOSE'})\r\n            },3000)\r\n        }\r\n    } catch (error) {\r\n        console.log(error);\r\n    }   \r\n}\r\n    \r\n\r\nexport const reLogin=()=>(dispatch)=>{\r\n    const cookieToken = readCookie('token')\r\n    if(cookieToken){\r\n        localStorage.setItem(\"token\",cookieToken)\r\n    }\r\n    const localToken = localStorage.getItem(\"token\");\r\n    if (localToken) {\r\n            dispatch({\r\n                type:\"LOG_IN\"\r\n            })\r\n        }\r\n}\r\nexport const LogOUT=()=>(dispatch)=>{\r\n    localStorage.removeItem(\"token\")\r\n    eraseCookie('token');\r\n    dispatch({\r\n        type:\"LOG_OUT\"\r\n    })\r\n}\r\n\r\nexport const editTask=({id, text, status})=>async()=>{\r\n    try {\r\n        await EDIT_TASK({\r\n            token:localStorage.getItem(\"token\"),\r\n            id,\r\n            text,\r\n            status\r\n        })\r\n    } catch (error) {\r\n    }\r\n}\r\nexport const SetFilter=(filter)=>async(dispatch)=>{\r\n    dispatch({\r\n        type:'SET_FILTER',\r\n        payload:filter\r\n    })\r\n}\r\nexport const EditTaskError=()=>(dispatch)=>{\r\n    dispatch({\r\n        type:'EDIT_TASK_ERROR'\r\n    })\r\n    setTimeout(()=>{\r\n        dispatch({\r\n            type:'EDIT_TASK_ERROR'\r\n        })\r\n    },3000)\r\n}","import { useSelector,useDispatch } from 'react-redux';\r\nimport React, {useEffect} from 'react';\r\nimport Task from '../Task';\r\nimport Pagination from \"../Pagination\";\r\nimport {getTasks} from \"../../store/actions\";\r\n\r\nconst taskCreatedBanner=(\r\n    <div className=\"alert alert-success\" role=\"alert\" style={{width:\"30%\",alignSelf:'center',display:'flex',justifyContent:'center'}}>\r\n  Задача была добавлена!\r\n    </div>)\r\n\r\nconst CardList = (props) => {\r\n    const dispatch = useDispatch()\r\n    const currentPage = useSelector((state) => state.currentPage);\r\n    const items = useSelector((state) => state.items);\r\n    const isLogin = useSelector((state) => state.isLogin);\r\n    const taskCreated = useSelector((state) => state.task_created);\r\n    const itemsTotal = useSelector(state => state.total_task_count)\r\n    const filterOptions=useSelector(state=>state.filter)\r\n    /*\r\n    When retrieving data using the useSelector hook,\r\n    prefer calling useSelector many times and retrieving smaller amounts of data,\r\n    instead of having a single larger useSelector call that returns multiple results in an object\r\n    */\r\n    const sort_field=Object.keys(filterOptions)[0]\r\n    const sort_direction=filterOptions[sort_field]\r\n\r\n    useEffect(() => {\r\n        dispatch(getTasks(sort_field,sort_direction,currentPage))\r\n    },[dispatch,props.history.location.pathname,sort_field,sort_direction,currentPage])\r\n    const setPage=(page)=>{\r\n        dispatch(getTasks(sort_field,sort_direction,page))\r\n    }\r\n    return (\r\n      <div style={{display:\"flex\",flexDirection:\"column\"}}>\r\n        {taskCreated && taskCreatedBanner}\r\n        <div className=\"row\" >\r\n          {items.map((item, i) => (\r\n              <Task key={i} {...item} isLogin={isLogin} />\r\n          ))}\r\n        </div>\r\n        <Pagination currentPage={currentPage} setPage={setPage} itemsTotal={itemsTotal}/>\r\n      </div>);\r\n    };\r\n\r\nexport default CardList;\r\n","import React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Nav, Navbar, NavDropdown } from \"react-bootstrap\";\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { SetFilter,LogOUT } from '../../store/actions';\r\n\r\nconst NavBar = () => {\r\n  const dispatch = useDispatch();\r\n  const isLogin= useSelector(state=>state.isLogin)\r\n  const onChange = (e) => {\r\n    dispatch(SetFilter({ [e.target.name]: e.target.value }));\r\n  };\r\n  const onLogOut=()=>{\r\n    dispatch(LogOUT())\r\n  }\r\n\r\n  return (\r\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\">\r\n        <Navbar.Brand >\r\n          <NavLink to=\"/\" className=\"navbar-brand\">\r\n           На главную\r\n         </NavLink>\r\n        </Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n             <NavLink to=\"/createTask\"\r\n                       activeClassName=\"active\"\r\n                       className=\"nav-link\"\r\n                       aria-current=\"page\">\r\n                       Добавить задачу\r\n             </NavLink>\r\n            <NavDropdown title=\"Сортировка\" id=\"collasible-nav-dropdown\">\r\n              <NavDropdown.Item >\r\n                  <button name={'username'}\r\n                          value={'desc'}\r\n                          onClick={onChange}\r\n                          className=\"dropdown-item\">\r\n                          По имени ↓\r\n                  </button></NavDropdown.Item>\r\n              <NavDropdown.Item>\r\n                  <button name={'username'}\r\n                          value={'asc'}\r\n                          onClick={onChange}\r\n                          className=\"dropdown-item\">\r\n                          По имени ↑\r\n                  </button>\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Divider />\r\n              <NavDropdown.Item >\r\n                  <button name={'email'}\r\n                          value={'desc'}\r\n                          onClick={onChange}\r\n                          className=\"dropdown-item\">\r\n                          По email ↓\r\n                  </button>\r\n              </NavDropdown.Item>\r\n                <NavDropdown.Item >\r\n                  <button name={'email'}\r\n                          value={'asc'}\r\n                          onClick={onChange}\r\n                          className=\"dropdown-item\">\r\n                          По email ↑\r\n                  </button>\r\n              </NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item >\r\n                  <button name={'status'}\r\n                          value={'desc'}\r\n                          onClick={onChange}\r\n                          className=\"dropdown-item\">\r\n                              По статусу ↓\r\n                  </button>\r\n              </NavDropdown.Item>\r\n                <NavDropdown.Item >\r\n                  <button name={'status'}\r\n                          value={'asc'}\r\n                          onClick={onChange}\r\n                          className=\"dropdown-item\">\r\n                          По статусу ↑\r\n                  </button>\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n          </Nav>\r\n            {!isLogin ? (\r\n                   <NavLink\r\n                        to=\"/logIn\"\r\n                        activeClassName=\"active\"\r\n                        className=\"nav-link\"\r\n                        aria-current=\"page\">\r\n                        Войти\r\n                    </NavLink>\r\n                        ) : (\r\n              <NavLink\r\n                    onClick={onLogOut}\r\n                    to=\"/logIn\"\r\n                    activeClassName=\"active\"\r\n                    className=\"nav-link\"\r\n                    aria-current=\"page\">\r\n                    Выйти\r\n                </NavLink>)}\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { useState } from 'react';\r\nimport {useDispatch} from \"react-redux\";\r\nimport {createTask} from \"../../store/actions\";\r\n\r\nconst AddTask = ({history}) => {\r\n  const dispatch=useDispatch()\r\n  const [form, setForm] = useState({\r\n    username:'',\r\n    email:'',\r\n    text:'',\r\n  });\r\n  const { username, email, text } = form;\r\n\r\n  const onChange = (e) => {\r\n    setForm({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const formData=new FormData()\r\n    formData.set('username', username);\r\n    formData.set('email', email);\r\n    formData.set('text', JSON.stringify({original: text}));\r\n    dispatch(createTask(formData))\r\n    history.push('/')\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"username\">Имя пользователя</label>\r\n          <input required\r\n            value={username}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            name=\"username\"\r\n            aria-describedby=\"username\"\r\n            placeholder=\"Enter username\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Почтовый адрес</label>\r\n          <input\r\n              required\r\n            value={email}\r\n            onChange={onChange}\r\n            type=\"email\"\r\n            className=\"form-control\"\r\n            name=\"email\"\r\n            aria-describedby=\"email\"\r\n            placeholder=\"Введите почтовый адресс\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"text\">Сообщение</label>\r\n          <input\r\n              required\r\n            value={text}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            name=\"text\"\r\n            aria-describedby=\"text\"\r\n            placeholder=\"text\"\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Отправить\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddTask;\r\n","import React, {useState} from 'react';\r\nimport {useDispatch} from 'react-redux';\r\nimport {editTask, EditTaskError, LogOUT} from '../../store/actions'\r\n\r\nconst EditTask = (props) => {\r\n  const dispatch = useDispatch()\r\n  const [formData, setFormData] = useState({\r\n    ...props.location.state,\r\n  });\r\n  const { username, email, text, status, id } = formData;\r\n\r\n  const onChange = (e) => {\r\n    setFormData({ ...formData, text:{...formData.text,edited:e.target.value} });\r\n  };\r\n  const onCheck=(e)=>{\r\n    setFormData({...formData,status:e.target.checked?10:0})\r\n  }\r\n  const onSubmit = (e) => {\r\n    e.preventDefault()\r\n    if(!localStorage.getItem('token')){\r\n      dispatch(LogOUT())\r\n      props.history.push('/logIn')\r\n      dispatch(EditTaskError())\r\n    }else {\r\n      console.log('aa')\r\n      const data={\r\n        id:id,\r\n        status:formData.status,\r\n        text:JSON.stringify({original: text.original,edited:text.edited})\r\n      }\r\n      dispatch(editTask(data))\r\n      props.history.push('/');\r\n    }\r\n\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-group\">\r\n          <p className=\"form-control\">{username}</p>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <p className=\"form-control\">{email}</p>\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"text\">Сообщение</label>\r\n          <input\r\n            value={text.edited?text.edited:text.original}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            name=\"text\"\r\n            aria-describedby=\"text\"\r\n            placeholder=\"text\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <div className=\"form-check-inline\">\r\n            <label className=\"form-check-label\">\r\n              <input checked={status} value={status} onChange={onCheck} type=\"checkbox\" className=\"form-check-input\" />\r\n              Задача выполнена\r\n            </label>\r\n          </div>\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Отправить\r\n        </button>\r\n      </form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditTask;\r\n","import React, { useState,useEffect} from 'react';\r\nimport {useDispatch,useSelector} from \"react-redux\";\r\nimport {LogIN} from '../../store/actions'\r\n\r\nconst LogInForm = ({history}) => {\r\n  const dispatch=useDispatch()\r\n  const isLogin= useSelector(state=>state.isLogin)\r\n  const createTaskError= useSelector(state=>state.createTaskError)\r\n  const loginError= useSelector(state=>state.loginError)\r\n  //если залогинены изначально, или залогинились после успешной попытки, редиректим на главную\r\n  useEffect(()=>{\r\n    if(isLogin){\r\n      history.push('/')\r\n    }\r\n  },[history,isLogin])\r\n\r\n  const [form, setFormData] = useState({\r\n    username: '',\r\n    password: '',\r\n  });\r\n  const { username, password } = form;\r\n  const onChange = (e) => {\r\n    setFormData({ ...form, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const onSubmit =(e) => {\r\n    e.preventDefault();\r\n    dispatch(LogIN(form))\r\n    }\r\n\r\n  return (\r\n    <div>\r\n      <form onSubmit={onSubmit}>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"username\">Имя пользователя</label>\r\n          <input\r\n              required\r\n            value={username}\r\n            onChange={onChange}\r\n            type=\"text\"\r\n            className=\"form-control\"\r\n            name=\"username\"\r\n            aria-describedby=\"username\"\r\n            placeholder=\"введите имя пользователя\"\r\n          />\r\n        </div>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"email\">Пароль</label>\r\n          <input\r\n              required\r\n            value={password}\r\n            onChange={onChange}\r\n            type=\"password\"\r\n            className=\"form-control\"\r\n            name=\"password\"\r\n            aria-describedby=\"password\"\r\n            placeholder=\"Введите пароль\"\r\n          />\r\n        </div>\r\n        <button type=\"submit\" className=\"btn btn-primary\">\r\n          Отправить\r\n        </button>\r\n      </form>\r\n      {loginError && <div style={{margin:'2em 0'}} className=\"alert alert-danger\" role=\"alert\">\r\n         Пользователь или пароль не найдены\r\n      </div>}\r\n      {createTaskError && <div style={{margin:'2em 0'}} className=\"alert alert-warning\" role=\"alert\">\r\n        Вы не залогинены!\r\n      </div>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LogInForm;\r\n","import React from 'react'\r\nimport {Redirect, Route} from 'react-router-dom'\r\nimport {useSelector} from \"react-redux\";\r\n\r\nconst ProtectedRoute = ({ component: Component, ...rest }) =>{\r\n    const isLogin=useSelector(state=>state.isLogin)\r\n    return (\r\n        <Route {...rest} render={(props) => (\r\n            isLogin === true ?\r\n                <Component {...props} /> : <Redirect to={{ pathname: '/login'}} />\r\n        )} />\r\n    );\r\n}\r\n\r\nexport default ProtectedRoute;","import React,{useEffect} from 'react'\nimport {useDispatch} from 'react-redux'\nimport {Switch,Route,withRouter,useLocation}from \"react-router-dom\";\nimport CardList from './components/TasksList';\nimport NavBar from '../src/components/NavBar';\nimport AddTask from './components/CreateTask'\nimport EditTask from './components/EditTask'\nimport LogInForm from './components/LogInForm'\nimport ProtectedRoute from \"./components/ProtectedRoute\";\nimport {reLogin} from './store/actions'\n\nfunction App() {\n  const dispatch = useDispatch()\n  const location = useLocation();\n  useEffect(() => {\n      dispatch(reLogin())\n  }, [dispatch]);\n\n  useEffect(()=>{\n      dispatch({\n          type:'SET_CURRENT_URL',\n          payload:location.pathname\n      })\n  },[location.pathname,dispatch])\n\n  return (\n    <div className=\"App\">\n    <NavBar />\n    <div className=\"container-fluid\" style={{display:'flex',flexDirection:'column',marginTop:'2em',justifyContent: 'center'}}>\n  <Switch>\n    <Route path=\"/\" exact render={(props)=> (\n        <CardList {...props} />)}/>\n          <Route path=\"/createTask\" render={(props)=> (\n              <AddTask {...props} />)}/>\n          <Route path=\"/logIn\" render={(props)=> (\n              <LogInForm {...props} />)}/>\n    <ProtectedRoute path=\"/task/:id\" component={EditTask} />\n        </Switch>\n        </div>\n    </div>\n    \n  );\n}\n\nexport default withRouter(App);\n","import { composeWithDevTools } from 'redux-devtools-extension';\r\nimport { createStore,applyMiddleware} from 'redux';\r\nimport thunk from 'redux-thunk';\r\n\r\nconst initialState = {\r\n    currentURL:'',\r\n    currentPage:1,\r\n    loginError:null,\r\n    createTaskError:false,\r\n    isLogin:false,\r\n    task_created:false,\r\n    total_task_count:0,\r\n    items: [\r\n    {username:'', email:'',text:'',status:'',id:'' },\r\n  ],\r\n  filter:{\r\n    name: 'desc',\r\n  }\r\n};\r\n\r\n//reducer\r\nconst tasksList = (state = initialState, { type, payload }) => {\r\n  switch (type) {\r\n    case 'LOAD_TASKS':\r\n      return {\r\n        ...state,\r\n        total_task_count:payload.res.data.message.total_task_count,\r\n        items: payload.res.data.message.tasks,\r\n        currentPage:payload.page\r\n      }\r\n    case 'SET_PAGE':\r\n      return {\r\n        ...state,\r\n        items: payload.tasks,\r\n        filter: {...state.filter},\r\n        currentPage: payload.page}\r\n    case 'SET_PAGE_NUMBER':\r\n      return {\r\n        ...state,\r\n        currentPage: payload}\r\n    case 'LOG_IN':\r\n      return {\r\n        ...state,\r\n        isLogin:true,\r\n        loginError:false\r\n    }\r\n    case 'LOG_IN_ERROR_CLOSE':\r\n      return{\r\n        ...state,\r\n        loginError: false\r\n      }\r\n    case 'LOG_OUT':\r\n      return {\r\n        ...state,\r\n        isLogin:false }\r\n    case 'TASK_CREATED':\r\n      return {\r\n        ...state,\r\n        task_created:true }\r\n    case 'TASK_CREATED_CLOSE':\r\n      return {\r\n        ...state,\r\n        task_created:false\r\n      }\r\n    case 'LOG_IN_ERROR':\r\n      return {\r\n        ...state,\r\n        loginError:true}\r\n    case 'EDIT_TASK_ERROR':\r\n      return {\r\n        ...state,\r\n        createTaskError:!state.createTaskError\r\n      }\r\n    case 'SET_FILTER':\r\n      return {\r\n        ...state,\r\n        filter:payload}\r\n    case 'SET_CURRENT_URL':\r\n      return {\r\n        ...state,\r\n        currentURL:payload\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst store = createStore(tasksList, composeWithDevTools(applyMiddleware(thunk)));\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport App from './App';\nimport store from './store/';\nimport { Provider } from 'react-redux';\nimport {BrowserRouter as Router} from 'react-router-dom'\n\n\nReactDOM.render(\n    <Router basename={process.env.PUBLIC_URL}>\n    <Provider store={store}>\n    <App />\n    </Provider>\n    </Router>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}